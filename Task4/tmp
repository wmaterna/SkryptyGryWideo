local lapis = require("lapis")
local json_params = require("lapis.application").json_params
local app = lapis.Application()
local cjson = require("cjson.safe")

local Category = {}
Category.__index = Category

function Category.new(id, name)
  local self = setmetatable({}, Category)
  self.id = id
  self.name = name
  return self
end



app:get("/init-cat", function()
  categories = {}
  local obj1 = Category.new(#categories + 1, "A")
  local obj2 = Category.new(#categories + 1, "B")
  local obj3 = Category.new(#categories + 1, "C")
  table.insert(categories, obj1)
  table.insert(categories, obj2)
  table.insert(categories, obj3)
  return { status = 200, json = categories }
end)

app:get("/categories", function()
  return { status = 200, json = categories }
end)

-- app:get("/categories/:id", function(self)
--   local category = categories[tonumber(self.params.id)]
--   if category then
--     return { status = 200, json = category  }
--   else
--     return { status = 404, json = { message = "Category not found" } }
--   end
-- end)



function getPostData()
  ngx.req.read_body()
  local validJson, data = pcall(function() return cjson.decode(ngx.req.get_body_data()) end)
  if not validJson then
    return nil
  elseif not data then
    return {}
  else
    return data
  end
end

app:post("/categories", json_params(function(self)
  local data = getPostData()
  if not data or data == {} then
    return { status = 404, json = { message = "Error" } }
  else
    newobj = Category.new(data.id, data.name);
    table.insert(categories, newobj)
    return { status = 200, json = cats }
  end
end))

return app